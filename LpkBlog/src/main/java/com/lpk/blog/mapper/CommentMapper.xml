<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lpk.blog.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.lpk.blog.pojo.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="comment_pid" jdbcType="INTEGER" property="commentPid" />
    <result column="comment_pname" jdbcType="VARCHAR" property="commentPname" />
    <result column="comment_article_id" jdbcType="INTEGER" property="commentArticleId" />
    <result column="comment_author_name" jdbcType="VARCHAR" property="commentAuthorName" />
    <result column="comment_author_email" jdbcType="VARCHAR" property="commentAuthorEmail" />
    <result column="comment_author_url" jdbcType="VARCHAR" property="commentAuthorUrl" />
    <result column="comment_author_avatar" jdbcType="VARCHAR" property="commentAuthorAvatar" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_agent" jdbcType="VARCHAR" property="commentAgent" />
    <result column="comment_ip" jdbcType="VARCHAR" property="commentIp" />
    <result column="comment_create_time" jdbcType="TIMESTAMP" property="commentCreateTime" />
    <result column="comment_role" jdbcType="INTEGER" property="commentRole" />
  </resultMap>
  <sql id="Base_Column_List">
    comment_id, comment_pid, comment_pname, comment_article_id, comment_author_name, 
    comment_author_email, comment_author_url, comment_author_avatar, comment_content, 
    comment_agent, comment_ip, comment_create_time, comment_role
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lpk.blog.pojo.Comment">
    insert into comment (comment_id, comment_pid, comment_pname, 
      comment_article_id, comment_author_name, comment_author_email, 
      comment_author_url, comment_author_avatar, 
      comment_content, comment_agent, comment_ip, 
      comment_create_time, comment_role)
    values (#{commentId,jdbcType=INTEGER}, #{commentPid,jdbcType=INTEGER}, #{commentPname,jdbcType=VARCHAR}, 
      #{commentArticleId,jdbcType=INTEGER}, #{commentAuthorName,jdbcType=VARCHAR}, #{commentAuthorEmail,jdbcType=VARCHAR}, 
      #{commentAuthorUrl,jdbcType=VARCHAR}, #{commentAuthorAvatar,jdbcType=VARCHAR}, 
      #{commentContent,jdbcType=VARCHAR}, #{commentAgent,jdbcType=VARCHAR}, #{commentIp,jdbcType=VARCHAR}, 
      #{commentCreateTime,jdbcType=TIMESTAMP}, #{commentRole,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lpk.blog.pojo.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="commentPid != null">
        comment_pid,
      </if>
      <if test="commentPname != null">
        comment_pname,
      </if>
      <if test="commentArticleId != null">
        comment_article_id,
      </if>
      <if test="commentAuthorName != null">
        comment_author_name,
      </if>
      <if test="commentAuthorEmail != null">
        comment_author_email,
      </if>
      <if test="commentAuthorUrl != null">
        comment_author_url,
      </if>
      <if test="commentAuthorAvatar != null">
        comment_author_avatar,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="commentAgent != null">
        comment_agent,
      </if>
      <if test="commentIp != null">
        comment_ip,
      </if>
      <if test="commentCreateTime != null">
        comment_create_time,
      </if>
      <if test="commentRole != null">
        comment_role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="commentPid != null">
        #{commentPid,jdbcType=INTEGER},
      </if>
      <if test="commentPname != null">
        #{commentPname,jdbcType=VARCHAR},
      </if>
      <if test="commentArticleId != null">
        #{commentArticleId,jdbcType=INTEGER},
      </if>
      <if test="commentAuthorName != null">
        #{commentAuthorName,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorEmail != null">
        #{commentAuthorEmail,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorUrl != null">
        #{commentAuthorUrl,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorAvatar != null">
        #{commentAuthorAvatar,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentAgent != null">
        #{commentAgent,jdbcType=VARCHAR},
      </if>
      <if test="commentIp != null">
        #{commentIp,jdbcType=VARCHAR},
      </if>
      <if test="commentCreateTime != null">
        #{commentCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentRole != null">
        #{commentRole,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lpk.blog.pojo.Comment">
    update comment
    <set>
      <if test="commentPid != null">
        comment_pid = #{commentPid,jdbcType=INTEGER},
      </if>
      <if test="commentPname != null">
        comment_pname = #{commentPname,jdbcType=VARCHAR},
      </if>
      <if test="commentArticleId != null">
        comment_article_id = #{commentArticleId,jdbcType=INTEGER},
      </if>
      <if test="commentAuthorName != null">
        comment_author_name = #{commentAuthorName,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorEmail != null">
        comment_author_email = #{commentAuthorEmail,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorUrl != null">
        comment_author_url = #{commentAuthorUrl,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorAvatar != null">
        comment_author_avatar = #{commentAuthorAvatar,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentAgent != null">
        comment_agent = #{commentAgent,jdbcType=VARCHAR},
      </if>
      <if test="commentIp != null">
        comment_ip = #{commentIp,jdbcType=VARCHAR},
      </if>
      <if test="commentCreateTime != null">
        comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentRole != null">
        comment_role = #{commentRole,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lpk.blog.pojo.Comment">
    update comment
    set comment_pid = #{commentPid,jdbcType=INTEGER},
      comment_pname = #{commentPname,jdbcType=VARCHAR},
      comment_article_id = #{commentArticleId,jdbcType=INTEGER},
      comment_author_name = #{commentAuthorName,jdbcType=VARCHAR},
      comment_author_email = #{commentAuthorEmail,jdbcType=VARCHAR},
      comment_author_url = #{commentAuthorUrl,jdbcType=VARCHAR},
      comment_author_avatar = #{commentAuthorAvatar,jdbcType=VARCHAR},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_agent = #{commentAgent,jdbcType=VARCHAR},
      comment_ip = #{commentIp,jdbcType=VARCHAR},
      comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
      comment_role = #{commentRole,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>